TODO:

* Symlinks are currently ignored. Details in test0019. Need to add
  symlink processing. Do they have their own size? Does it change
  when the target changes?

* Integration of the xxHash library using the XXH3_128bits algorithm
  for high-performance hashing as a multi-threaded implementation.
  Here's the concept: The file is read in a single thread.
  Each read data chunk (for example, 1 megabyte) is divided
  among multiple threads, with the number of threads matching
  the available CPU cores. Each portion is hashed independently,
  then the results are aggregated before moving on to read the
  next block from the file.

* db_check_up_paths.c
    * Consider printing paths line by line instead of inline

* Add completion messages at the end of each significant code block
  Like in detect_paths.c ending: slog(TRACE,"Paths detected\n");

* The --ignore mode isn't functioning properly when --compare is enabled.

* Revert to the multipath version, but keep this capability undocumented.

* For preliminary scans with --progress and --update flags, implement database traversal to show immediate statistics on affected files:
  - Number of files to be deleted
  - Number of files to be added
  - Number of files to be modified

* Implement testing for interruption handling:
  - Test interruption of large file scanning
  - Test interruption of sha512 hashing process on large files

* Create tests combining ignore and dry-run flags, don't forget about --include
  - It would be good to repeat all tests from README with dry-run and ignore options

* Testing: Verify that --silent suppresses all output regardless of other options
  - Add this option to EVERY test! This could help identify messages that aren't being
    properly suppressed in --silent mode

* Review English language correctness in all message strings

* Implement fuzzing tests

* Design system tests to exercise all conditional report messages

* Add usage hints for --db-clean-ignored option when used with --ignore and --update

* Add verification that specified options work only with --compare

* Add --onlyAnotB option
* Add --onlyBnotA option
* Add --onlySHAdiffs option

* Unit tests with code coverage

* Document all code

* Create man documentation

* Create flatpak and AppImage packages, note that author will assist with package creation for any OS if developers encounter difficulties
	https://unix.stackexchange.com/questions/740712/does-flatpak-support-command-line-applications

* Post program information on opennet

* Subscribe to precizer tag on Stack Overflow, create tag if needed and follow it

* ALL DONE
